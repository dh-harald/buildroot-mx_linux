From 7b947d040ae37c30a2eb44b17a56e1feaf78c4b3 Mon Sep 17 00:00:00 2001
From: croniccorey <cronmod.dev@gmail.com>
Date: Thu, 26 Dec 2013 02:57:53 -0500
Subject: [PATCH] LINUX: Add config options for powermanagment

---
 configure.in                                     | 53 ++++++++++++++++++++++++
 xbmc/powermanagement/linux/PivosPowerSyscall.cpp | 24 +++++++----
 2 files changed, 69 insertions(+), 8 deletions(-)

diff --git a/configure.in b/configure.in
index bbb6769..dacff3f 100644
--- a/configure.in
+++ b/configure.in
@@ -1528,6 +1528,59 @@ else
   USE_SKIN_TOUCHED=0
 fi
 
+# Amlogic Power options
+AC_ARG_ENABLE([powerdown],
+  [AS_HELP_STRING([--enable-powerdown],
+  [enable powerdown option (default is no)])],
+  [has_power=$enableval],
+  [has_power=no])
+
+if test "$has_power" = "yes"; then
+  HAS_POWERDOWN=1
+  AC_DEFINE([XBMC_POWERDOWN], [1], [Whether the system can preform powerdown.])
+else
+  HAS_POWERDOWN=0
+fi
+
+AC_ARG_ENABLE([suspend],
+  [AS_HELP_STRING([--enable-suspend],
+  [enable suspend option (default is no)])],
+  [has_suspend=$enableval],
+  [has_suspend=no])
+
+if test "$has_suspend" = "yes"; then
+  HAS_SUSPEND=1
+  AC_DEFINE([XBMC_SUSPEND], [1], [Whether the system can preform suspend.])
+else
+  HAS_SUSPEND=0
+fi
+
+AC_ARG_ENABLE([hibernate],
+  [AS_HELP_STRING([--enable-hibernate],
+  [enable hibernate option (default is no)])],
+  [has_hibernate=$enableval],
+  [has_hibernate=no])
+
+if test "$has_hibernate" = "yes"; then
+  HAS_HIBERNATE=1
+  AC_DEFINE([XBMC_HIBERNATE], [1], [Whether the system can preform hibernate.])
+else
+  HAS_HIBERNATE=0
+fi
+
+AC_ARG_ENABLE([reboot],
+  [AS_HELP_STRING([--enable-reboot],
+  [enable reboot option (default is no)])],
+  [has_reboot=$enableval],
+  [has_reboot=no])
+
+if test "$has_reboot" = "yes"; then
+  HAS_REBOOT=1
+  AC_DEFINE([XBMC_REBOOT], [1], [Whether the system can preform reboot.])
+else
+  HAS_REBOOT=0
+fi
+
 # libssh
 if test "x$use_ssh" = "xno"; then
   AC_MSG_NOTICE($ssh_disabled)
diff --git a/xbmc/powermanagement/linux/PivosPowerSyscall.cpp b/xbmc/powermanagement/linux/PivosPowerSyscall.cpp
index 8397c12..6ad6674 100644
--- a/xbmc/powermanagement/linux/PivosPowerSyscall.cpp
+++ b/xbmc/powermanagement/linux/PivosPowerSyscall.cpp
@@ -25,18 +25,26 @@
 
 CPivosPowerSyscall::CPivosPowerSyscall()
 {
-  if (aml_get_cputype() == 1)
-  {
-    m_CanPowerdown = true;
-    m_CanSuspend   = false;
-  }
-  else
-  {
+#ifdef XBMC_POWERDOWN
     m_CanPowerdown = true;
+#else
+    m_CanPowerdown = false;
+#endif
+#ifdef XBMC_SUSPEND
+    m_CanSuspend   = true;
+#else
     m_CanSuspend   = false;
-  }
+#endif
+#ifdef XBMC_HIBERNATE
+  m_CanHibernate = true;
+#else
   m_CanHibernate = false;
+#endif
+#ifdef XBMC_REBOOT
   m_CanReboot    = true;
+#else
+  m_CanReboot    = false;
+#endif
 
   m_OnResume  = false;
   m_OnSuspend = false;
-- 
1.9.1

